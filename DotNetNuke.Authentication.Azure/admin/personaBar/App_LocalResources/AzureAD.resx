<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nav_AzureAD.Text" xml:space="preserve">
    <value>Azure AD</value>
  </data>
  <data name="No.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="SettingsError.Text" xml:space="preserve">
    <value>Could not update the settings. Please try later.</value>
  </data>
  <data name="SettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="SettingsUpdateSuccess.Text" xml:space="preserve">
    <value>The settings have been updated.</value>
  </data>
  <data name="Yes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblTenantId.Error" xml:space="preserve">
    <value>You must specify the Azure Tenant ID</value>
  </data>
  <data name="lblTenantId.Help" xml:space="preserve">
    <value>Azure Active Directory tenant ID (Directory ID). For single-tenant apps, this can be: the guid of your directory; the directory name in the format mycompany.onmicrosoft.com; the default custom domain name being used in the tenant, i.e. mycompany.com. For multi-tenant scenarios, type "common" to allow the provider to use the common endpoint authorization url.</value>
  </data>
  <data name="lblTenantId.Text" xml:space="preserve">
    <value>Tenant ID</value>
  </data>
  <data name="lblAppId.Error" xml:space="preserve">
    <value>You must specify your application ID</value>
  </data>
  <data name="lblAppId.Help" xml:space="preserve">
    <value>The unique identifier for the application</value>
  </data>
  <data name="lblAppId.Text" xml:space="preserve">
    <value>App ID</value>
  </data>
  <data name="lblAppSecret.Error" xml:space="preserve">
    <value>You must specify a secret key</value>
  </data>
  <data name="lblAppSecret.Help" xml:space="preserve">
    <value>Secret key</value>
  </data>
  <data name="lblAppSecret.Text" xml:space="preserve">
    <value>Secret</value>
  </data>
  <data name="lblAutoRedirect.Help" xml:space="preserve">
    <value>If enabled, the login page will automatically redirect to the Azure AD login page</value>
  </data>
  <data name="lblAutoRedirect.Text" xml:space="preserve">
    <value>Auto-Redirect</value>
  </data>
  <data name="lblEnabled.Help" xml:space="preserve">
    <value>Enables the Azure Active Directory authentication provider for this portal</value>
  </data>
  <data name="lblEnabled.Text" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="lblDirectory.Text" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="lblProviderCredentials.Text" xml:space="preserve">
    <value>Provider credentials</value>
  </data>
  <data name="lblTabDescription.Text" xml:space="preserve">
    <value>The DNN Azure Active Directory Provider is an Authentication provider for DNN Platform that uses Azure Active Directory OAuth2 authentication to authenticate users.</value>
  </data>
  <data name="SaveSettings.Text" xml:space="preserve">
    <value>Save Settings</value>
  </data>
  <data name="AadClaim.Header.Text" xml:space="preserve">
    <value>AAD Claim</value>
  </data>
  <data name="AadExtension.Header.Text" xml:space="preserve">
    <value>AAD Extension</value>
  </data>
  <data name="AadProperty.Header.Text" xml:space="preserve">
    <value>AAD Claim</value>
  </data>
  <data name="AadRole.Header.Text" xml:space="preserve">
    <value>AAD Role</value>
  </data>
  <data name="AdvancedSettings.Text" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="cmdAddProfileMapping.Text" xml:space="preserve">
    <value>Add Mapping</value>
  </data>
  <data name="cmdAddRoleMapping.Text" xml:space="preserve">
    <value>Add Mapping</value>
  </data>
  <data name="DnnProfileProperty.Header.Text" xml:space="preserve">
    <value>DNN Profile Property</value>
  </data>
  <data name="DnnProperty.Header.Text" xml:space="preserve">
    <value>DNN Property</value>
  </data>
  <data name="DnnRole.Header.Text" xml:space="preserve">
    <value>DNN Role</value>
  </data>
  <data name="ErrorMappingDuplicated.Text" xml:space="preserve">
    <value>This item is already mapped</value>
  </data>
  <data name="ErrorProfileMappingDuplicated.Text" xml:space="preserve">
    <value>This property is already mapped</value>
  </data>
  <data name="ErrorUserMappingDuplicated.Text" xml:space="preserve">
    <value>This property is already mapped</value>
  </data>
  <data name="GeneralSettings.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="InvalidAadClaimName.Text" xml:space="preserve">
    <value>You have to type a valid AAD claim name</value>
  </data>
  <data name="InvalidAadPropertyName.Text" xml:space="preserve">
    <value>Incorrect AAD property name</value>
  </data>
  <data name="InvalidAadRoleName.Text" xml:space="preserve">
    <value>Incorrect Aad role name</value>
  </data>
  <data name="lblAADAppClientId.Error" xml:space="preserve">
    <value>You must specify the Azure AD Application ID</value>
  </data>
  <data name="lblAADAppClientId.Help" xml:space="preserve">
    <value>The Azure AD Application ID (it's used to sync user data)</value>
  </data>
  <data name="lblAADAppClientId.Text" xml:space="preserve">
    <value>Application Id</value>
  </data>
  <data name="lblAADAppSecret.Error" xml:space="preserve">
    <value>You must especify the application key</value>
  </data>
  <data name="lblAADAppSecret.Help" xml:space="preserve">
    <value>A valid key for that Azure AD Application</value>
  </data>
  <data name="lblAADAppSecret.Text" xml:space="preserve">
    <value>Application Key</value>
  </data>
  <data name="lblAadClaimName.Help" xml:space="preserve">
    <value>The AAD claim name</value>
  </data>
  <data name="lblAadClaimName.Text" xml:space="preserve">
    <value>AAD Claim*</value>
  </data>
  <data name="lblAadExtensionName.Help" xml:space="preserve">
    <value>The AAD extension name</value>
  </data>
  <data name="lblAadExtensionName.Text" xml:space="preserve">
    <value>AAD Extension</value>
  </data>
  <data name="lblAadPropertyName.Help" xml:space="preserve">
    <value>This is the AAD property against which the DNN property will be mapped.</value>
  </data>
  <data name="lblAadPropertyName.Text" xml:space="preserve">
    <value>AAD Property</value>
  </data>
  <data name="lblAadRoleName.Text" xml:space="preserve">
    <value>AAD Role*</value>
  </data>
  <data name="lblAADSettings.Text" xml:space="preserve">
    <value>Graph Client</value>
  </data>
  <data name="lblAPIResource.Text" xml:space="preserve">
    <value>API Resource</value>
  </data>
  <data name="lblAPIResourceDesc.Text" xml:space="preserve">
    <value>If you are going to use the issued tokens to access an external WebAPI that uses Azure AD Authorization, you can specify the App ID URI and scopes that will be validated by the WebAPI</value>
  </data>
  <data name="lblAppIdUri.Help" xml:space="preserve">
    <value>The App ID Uri of the external WebAPI, obtained from the Azure portal (i.e. https://mytenant.onmicrosoft.com/myapi/)</value>
  </data>
  <data name="lblAppIdUri.Text" xml:space="preserve">
    <value>App ID Uri</value>
  </data>
  <data name="lblAudiences.Help" xml:space="preserve">
    <value>Introduce the audiences to validate JWT tokens, separated by commas. If left empty, the Application Id will be used by default.</value>
  </data>
  <data name="lblAudiences.Text" xml:space="preserve">
    <value>Audiences</value>
  </data>
  <data name="lblDnnProfilePropertyName.Help" xml:space="preserve">
    <value>The DNN profile property you want to map with a AAD claim</value>
  </data>
  <data name="lblDnnProfilePropertyName.Text" xml:space="preserve">
    <value>DNN profile property*</value>
  </data>
  <data name="lblDnnPropertyName.Help" xml:space="preserve">
    <value>This is the DNN property that is going to be mapped against a AAD property</value>
  </data>
  <data name="lblDnnPropertyName.Text" xml:space="preserve">
    <value>DNN Property</value>
  </data>
  <data name="lblDnnRoleName.Help" xml:space="preserve">
    <value>The DNN role you want to map with a AAD role</value>
  </data>
  <data name="lblDnnRoleName.Text" xml:space="preserve">
    <value>DNN Role*</value>
  </data>
  <data name="lblDnnUserPropertyName.Help" xml:space="preserve">
    <value>The DNN user property you want to map with a AAD claim</value>
  </data>
  <data name="lblDnnUserPropertyName.Text" xml:space="preserve">
    <value>DNN user property*</value>
  </data>
  <data name="lblGraphClient.Help" xml:space="preserve">
    <value>A Tenant ID, an Application ID and an Application Secret are needed to use the Microsoft Graph API. By default, the ones introduced in General Settings will be used, but you can also specify different ones.</value>
  </data>
  <data name="lblGroupNamePrefixEnabled.Help" xml:space="preserve">
    <value>Enables the addition of the prefix "Azure-" to all group names coming from AAD.</value>
  </data>
  <data name="lblGroupNamePrefixEnabled.Text" xml:space="preserve">
    <value>Prefix group names</value>
  </data>
  <data name="lblNamePrefixes.Help" xml:space="preserve">
    <value>By default, all users and groups coming from Azure AD will contain the prefix "Azure-". The following two options allow you to disable the addition of that prefix</value>
  </data>
  <data name="lblNamePrefixes.Text" xml:space="preserve">
    <value>Name prefixes</value>
  </data>
  <data name="lblPortalId.Text" xml:space="preserve">
    <value>PortalId</value>
  </data>
  <data name="lblProfilePropertiesMapping.Text" xml:space="preserve">
    <value>USER PROFILE PROPERTIES MAPPING</value>
  </data>
  <data name="lblProfileSyncEnabled.Help" xml:space="preserve">
    <value>Enables the profile synchronization for this portal</value>
  </data>
  <data name="lblProfileSyncEnabled.Text" xml:space="preserve">
    <value>Profile Sync</value>
  </data>
  <data name="lblRedirectUri.Help" xml:space="preserve">
    <value>If specified, the redirect uri after a successful login. By default (blank), the user will be redirected to the page originating the login redirection.</value>
  </data>
  <data name="lblRedirectUri.Text" xml:space="preserve">
    <value>Redirect Uri</value>
  </data>
  <data name="lblRedirectUri.Error" xml:space="preserve">
    <value>You must specify a full, valid HTTPS or localhost URL</value>
  </data>
  <data name="lblOnErrorUri.Help" xml:space="preserve">
    <value>If specified, when an Azure AD auth error happens the user is redirected to the url instead of showing the default DNN login page.</value>
  </data>
  <data name="lblOnErrorUri.Text" xml:space="preserve">
    <value>On Auth Error Uri</value>
  </data>
  <data name="lblRolesMapping.Text" xml:space="preserve">
    <value>ROLES MAPPING</value>
  </data>
  <data name="lblRoleSyncEnabled.Help" xml:space="preserve">
    <value>Enables the role synchronization for this portal</value>
  </data>
  <data name="lblRoleSyncEnabled.Text" xml:space="preserve">
    <value>Role Sync</value>
  </data>
  <data name="lblScopes.Help" xml:space="preserve">
    <value>The scopes separated by spaces, that will be include in the issued tokens, to be validated by the external WebAPI (i.e. "read write")</value>
  </data>
  <data name="lblScopes.Text" xml:space="preserve">
    <value>Scopes</value>
  </data>
  <data name="lblSynchronization.Text" xml:space="preserve">
    <value>Synchronization</value>
  </data>
  <data name="lblSynchronizationDesc.Text" xml:space="preserve">
    <value>The synchronization process can automatically sync roles, users and profiles from your Azure AD tenant into your DNN portal. This can affect login performance.</value>
  </data>
  <data name="lblTabDescription.Text1" xml:space="preserve">
    <value>The DNN Azure Active Directory  Provider is an Authentication provider for DNN Platform that uses Azure Active Directory OAuth2 authentication to authenticate users.</value>
  </data>
  <data name="lblTokenValidation.Help" xml:space="preserve">
    <value>This provider supports JWT authorization. You can get a JWT token directly from the Azure AD API with your desired audiences, and then call a DNN WebAPI controller. Below 
	you can specify different settings to validate issued tokens.</value>
  </data>
  <data name="lblTokenValidation.Text" xml:space="preserve">
    <value>Token Validation</value>
  </data>
  <data name="lblUseGlobalSettings.Help" xml:space="preserve">
    <value>If enabled, all the settings are applied to all portals on this deployment. Only Super Users can edit this setting</value>
  </data>
  <data name="lblUseGlobalSettings.Text" xml:space="preserve">
    <value>Use Global Settings</value>
  </data>
  <data name="lblUsernamePrefixEnabled.Help" xml:space="preserve">
    <value>Enables the addition of the prefix "Azure-" to all user names coming from AAD.</value>
  </data>
  <data name="lblUsernamePrefixEnabled.Text" xml:space="preserve">
    <value>Prefix user names</value>
  </data>
  <data name="lblUsersMapping.Text" xml:space="preserve">
    <value>USER PROPERTIES MAPPINGS</value>
  </data>
  <data name="MappingDeletedWarning.Text" xml:space="preserve">
    <value>Are you sure you want to delete this mapping?&lt;br/&gt;AAD users will remain in the DNN role</value>
  </data>
  <data name="MappingDeleteSuccess.Text" xml:space="preserve">
    <value>Mapping removed successfully</value>
  </data>
  <data name="Mappings.Text" xml:space="preserve">
    <value>Mappings</value>
  </data>
  <data name="MappingUpdateSuccess.Text" xml:space="preserve">
    <value>Mapping saved successfully</value>
  </data>
  <data name="NamePrefixesWarningMessage.Text" xml:space="preserve">
    <value>Warning: If these settings change, all users who have already been synchronized will be synchronized again with their new usernames after the next login, leaving the old ones in the system.</value>
  </data>
  <data name="ProfileMappingDeletedWarning.Text" xml:space="preserve">
    <value>Are you sure you want to delete this mapping?</value>
  </data>
  <data name="TabRoleMappings.Text" xml:space="preserve">
    <value>Role Mappings</value>
  </data>
  <data name="TabUserMappings.Text" xml:space="preserve">
    <value>User Mappings</value>
  </data>
  <data name="TabUserProfileMappings.Text" xml:space="preserve">
    <value>User Profile Mappings</value>
  </data>
  <data name="lblAutoAuthorize.Help" xml:space="preserve">
    <value>If enabled, automatically authorize users after login independently of the portal user registration settings</value>
  </data>
  <data name="lblAutoAuthorize.Text" xml:space="preserve">
    <value>Auto-Authorize Users After Login</value>
  </data>
  <data name="lblAadRoleName.Help" xml:space="preserve">
    <value>The Azure AD Role name to map</value>
  </data>
  <data name="TabSynchronization.Text" xml:space="preserve">
    <value>Synchronization</value>
  </data>
  <data name="TabMore.Text" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="lblAuthorizationCode.Text" xml:space="preserve">
    <value>Authorization Code</value>
  </data>
  <data name="lblAuthorizationCodePrompt.Text" xml:space="preserve">
    <value>Prompt</value>
  </data>
  <data name="lblAuthorizationCodePrompt.Help" xml:space="preserve">
    <value>Indicates the type of user interaction that is required. The default behavior is to either sign in the sole current user, show the account picker if there are multiple users, or show the login page if there are no users signed in.
&lt;br/&gt;
&lt;b&gt;[login]&lt;/b&gt; forces the user to enter their credentials on that request, negating single-sign on.
&lt;br/&gt;
&lt;b&gt;[none]&lt;/b&gt; is the opposite. It ensures that the user isn't presented with any interactive prompt. If the request can't be completed silently by using single-sign on, the Microsoft identity platform returns an interaction_required error.
&lt;br/&gt;
&lt;b&gt;[consent]&lt;/b&gt; triggers the OAuth consent dialog after the user signs in, asking the user to grant permissions to the app.
&lt;br/&gt;
&lt;b&gt;[select_account]&lt;/b&gt; interrupts single sign-on providing account selection experience listing all the accounts either in session or any remembered account or an option to choose to use a different account altogether.</value>
  </data>
  <data name="lblAuthorizationCodeDomainHint.Text" xml:space="preserve">
    <value>Domain Hint</value>
  </data>
  <data name="lblAuthorizationCodeDomainHint.Help" xml:space="preserve">
    <value>If included, the app skips the email-based discovery process that user goes through on the sign-in page, leading to a slightly more streamlined user experience.</value>
  </data>
  <data name="lblPromptBlank" xml:space="preserve">
    <value> </value>
  </data>
  <data name="lblPromptLogin" xml:space="preserve">
    <value>login</value>
  </data>
  <data name="lblPromptNone" xml:space="preserve">
    <value>none</value>
  </data>
  <data name="lblPromptConsent" xml:space="preserve">
    <value>consent</value>
  </data>
  <data name="lblPromptSelectAccount" xml:space="preserve">
    <value>select_account</value>
  </data>
  <data name="PromptBlank" xml:space="preserve">
    <value />
  </data>
  <data name="PromptLogin" xml:space="preserve">
    <value>login</value>
  </data>
  <data name="PromptNone" xml:space="preserve">
    <value>none</value>
  </data>
  <data name="PromptConsent" xml:space="preserve">
    <value>consent</value>
  </data>
  <data name="PromptSelectAccount" xml:space="preserve">
    <value>select_account</value>
  </data>
  <data name="lblUserSyncEnabled.Help" xml:space="preserve">
    <value>Enables the user synchronization for this portal</value>
  </data>
  <data name="lblUserSyncEnabled.Text" xml:space="preserve">
    <value>User Sync</value>
  </data>
  <data name="lblAutoMatchExistingUsers.Help" xml:space="preserve">
    <value>If enabled, logging in with Azure AD, by providing a username identical to an existing user created on DNN, will automatically bind that user to the the one in Azure AD.</value>
  </data>
  <data name="lblAutoMatchExistingUsers.Text" xml:space="preserve">
    <value>Auto-Match Existing Users</value>
  </data>
  <data name="lblUseCustomParameters.Help" xml:space="preserve">
    <value>If enabled, the Microsoft Graph API will use the values specified in this section. Otherwise, it will use the ones in specified in General Settings.</value>
  </data>
  <data name="lblUseCustomParameters.Text" xml:space="preserve">
    <value>Use Custom Parameters</value>
  </data>
</root>